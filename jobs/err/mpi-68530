Matplotlib created a temporary cache directory at /tmp/matplotlib-tup985xa because the default path (/home/hajta2/.config/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.
Matplotlib created a temporary cache directory at /tmp/matplotlib-q7g9jip7 because the default path (/home/hajta2/.config/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.
0it [00:00, ?it/s]0it [00:00, ?it/s]1it [00:00,  6.37it/s]1it [00:00,  6.35it/s]2it [00:00,  6.40it/s]2it [00:00,  6.38it/s]3it [00:00,  6.35it/s]3it [00:00,  6.34it/s]4it [00:00,  6.37it/s]4it [00:00,  6.35it/s]5it [00:00,  6.38it/s]5it [00:00,  6.35it/s]6it [00:00,  6.41it/s]6it [00:00,  6.40it/s]7it [00:01,  6.40it/s]7it [00:01,  6.39it/s]8it [00:01,  6.40it/s]8it [00:01,  6.38it/s]9it [00:01,  6.41it/s]9it [00:01,  6.38it/s]10it [00:01,  6.41it/s]10it [00:01,  6.38it/s]11it [00:01,  6.41it/s]11it [00:01,  6.37it/s]12it [00:01,  6.41it/s]12it [00:01,  6.37it/s]13it [00:02,  6.41it/s]13it [00:02,  6.37it/s]14it [00:02,  6.41it/s]14it [00:02,  6.38it/s]15it [00:02,  6.42it/s]15it [00:02,  6.39it/s]16it [00:02,  6.42it/s]16it [00:02,  6.38it/s]17it [00:02,  6.40it/s]17it [00:02,  6.37it/s]18it [00:02,  6.40it/s]18it [00:02,  6.36it/s]19it [00:02,  6.42it/s]19it [00:02,  6.38it/s]20it [00:03,  6.32it/s]20it [00:03,  6.37it/s]21it [00:03,  6.34it/s]21it [00:03,  6.36it/s]22it [00:03,  6.35it/s]22it [00:03,  6.35it/s]23it [00:03,  6.35it/s]23it [00:03,  6.35it/s]24it [00:03,  6.35it/s]24it [00:03,  6.34it/s]25it [00:03,  6.35it/s]25it [00:03,  6.33it/s]26it [00:04,  6.39it/s]26it [00:04,  6.37it/s]27it [00:04,  6.40it/s]27it [00:04,  6.38it/s]28it [00:04,  6.41it/s]28it [00:04,  6.38it/s]29it [00:04,  6.40it/s]29it [00:04,  6.38it/s]30it [00:04,  6.41it/s]30it [00:04,  6.39it/s]31it [00:04,  6.40it/s]31it [00:04,  6.38it/s]32it [00:05,  6.41it/s]32it [00:05,  6.38it/s]33it [00:05,  6.43it/s]33it [00:05,  6.41it/s]34it [00:05,  6.39it/s]34it [00:05,  6.37it/s]35it [00:05,  6.40it/s]35it [00:05,  6.39it/s]36it [00:05,  6.43it/s]36it [00:05,  6.40it/s]37it [00:05,  6.44it/s]37it [00:05,  6.41it/s]38it [00:05,  6.43it/s]38it [00:05,  6.41it/s]39it [00:06,  6.44it/s]39it [00:06,  6.41it/s]40it [00:06,  6.44it/s]40it [00:06,  6.41it/s]41it [00:06,  6.43it/s]41it [00:06,  6.40it/s]42it [00:06,  6.43it/s]42it [00:06,  6.41it/s]43it [00:06,  6.46it/s]43it [00:06,  6.44it/s]44it [00:06,  6.45it/s]44it [00:06,  6.44it/s]45it [00:07,  6.46it/s]45it [00:07,  6.44it/s]46it [00:07,  6.43it/s]46it [00:07,  6.42it/s]47it [00:07,  6.44it/s]47it [00:07,  6.42it/s]48it [00:07,  6.40it/s]48it [00:07,  6.43it/s]49it [00:07,  6.40it/s]49it [00:07,  6.42it/s]50it [00:07,  6.43it/s]50it [00:07,  6.43it/s]51it [00:07,  6.43it/s]51it [00:07,  6.41it/s]
51it [00:07,  6.43it/s]51it [00:07,  6.39it/s]
--------------------------------------------------------------------------
[[51993,1],1]: A high-performance Open MPI point-to-point messaging module
was unable to find any relevant network interfaces:

Module: OpenFabrics (openib)
  Host: renyi

Another transport will be used instead, although this may result in
lower performance.

NOTE: You can disable this warning by setting the MCA parameter
btl_base_warn_component_unused to 0.
--------------------------------------------------------------------------
Operator `initdamp` generated in 0.40 s
  * lowering.IET: 0.18 s (45.8 %)
     * specializing.IET: 0.13 s (33.1 %)
  * lowering.Clusters: 0.15 s (38.2 %)
     * specializing.Clusters: 0.09 s (22.9 %)
Flops reduction after symbolic optimization: [72 --> 72]
Operator `initdamp` generated in 0.40 s
  * lowering.IET: 0.18 s (45.6 %)
     * specializing.IET: 0.13 s (32.9 %)
  * lowering.Clusters: 0.15 s (38.0 %)
     * specializing.Clusters: 0.10 s (25.3 %)
Flops reduction after symbolic optimization: [72 --> 72]
AutoTuner: cannot perform autotuning with 0 time loops; skipping
AutoTuner: cannot perform autotuning with 0 time loops; skipping
mpicxx -g -fPIC -std=c++11 -gpu=pinned -mp -acc:gpu -fast -shared /tmp/devito-jitcache-uid543800090/1eebde15cef7ea6ca860fea0ee3b045b9b5a2f9c.cpp -lm -o /tmp/devito-jitcache-uid543800090/1eebde15cef7ea6ca860fea0ee3b045b9b5a2f9c.so
[renyi.cl.itk.ppke.hu:1976154] 1 more process has sent help message help-mpi-btl-base.txt / btl:no-nics
[renyi.cl.itk.ppke.hu:1976154] Set MCA parameter "orte_base_help_aggregate" to 0 to see all help / error messages
Operator `initdamp` jit-compiled `/tmp/devito-jitcache-uid543800090/1eebde15cef7ea6ca860fea0ee3b045b9b5a2f9c.cpp` in 13.44 s with `NvidiaCompiler`
Operator `initdamp` fetched `/tmp/devito-jitcache-uid543800090/1eebde15cef7ea6ca860fea0ee3b045b9b5a2f9c.cpp` in 13.49 s from jit-cache
Operator `initdamp` ran in 4.99 s
Operator `initdamp` ran in 4.99 s
Global performance: [OI=0.22, 0.05 GFlops/s]
Global performance: [OI=0.22, 0.05 GFlops/s]
Local performance:
Local performance:
  * section0[rank0]<> ran in 0.01 s 
  * section0[rank0]<> ran in 0.01 s 
  * section0[rank1]<> ran in 0.01 s 
  * section0[rank1]<> ran in 0.01 s 
  * section1[rank0]<508> ran in 0.01 s [OI=0.88, 0.36 GFlops/s, 0.00 GPts/s]
  * section2[rank0]<508,7016> ran in 0.01 s [OI=0.69, 576.56 GFlops/s, 0.00 GPts/s]
  * section1[rank0]<508> ran in 0.01 s [OI=0.88, 0.36 GFlops/s, 0.00 GPts/s]
  * section3[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section2[rank0]<508,7016> ran in 0.01 s [OI=0.69, 576.56 GFlops/s, 0.00 GPts/s]
  * section4[rank1]<508,7016> ran in 0.01 s [OI=0.69, 435.62 GFlops/s, 0.00 GPts/s]
  * section5[rank0]<508> ran in 0.01 s [OI=0.88, 0.45 GFlops/s, 0.00 GPts/s]
  * section3[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section5[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section4[rank1]<508,7016> ran in 0.01 s [OI=0.69, 435.62 GFlops/s, 0.00 GPts/s]
  * section6[rank0]<6508,508> ran in 0.01 s [OI=0.69, 638.02 GFlops/s, 0.00 GPts/s]
  * section6[rank1]<6508,508> ran in 0.01 s [OI=0.69, 527.06 GFlops/s, 0.00 GPts/s]
  * section5[rank0]<508> ran in 0.01 s [OI=0.88, 0.45 GFlops/s, 0.00 GPts/s]
  * section7[rank0]<508> ran in 0.01 s [OI=0.88, 0.40 GFlops/s, 0.00 GPts/s]
  * section5[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section7[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section8[rank0]<6508,508> ran in 0.01 s [OI=0.69, 606.12 GFlops/s, 0.00 GPts/s]
  * section6[rank0]<6508,508> ran in 0.01 s [OI=0.69, 638.02 GFlops/s, 0.00 GPts/s]
  * section8[rank1]<6508,508> ran in 0.01 s [OI=0.69, 527.06 GFlops/s, 0.00 GPts/s]
  * section6[rank1]<6508,508> ran in 0.01 s [OI=0.69, 527.06 GFlops/s, 0.00 GPts/s]
Performance[mode=advanced] arguments: {'deviceid': -1, 'devicerm': 1}
  * section7[rank0]<508> ran in 0.01 s [OI=0.88, 0.40 GFlops/s, 0.00 GPts/s]
  * section7[rank1]<508> ran in 0.01 s [OI=0.88, 0.30 GFlops/s, 0.00 GPts/s]
  * section8[rank0]<6508,508> ran in 0.01 s [OI=0.69, 606.12 GFlops/s, 0.00 GPts/s]
  * section8[rank1]<6508,508> ran in 0.01 s [OI=0.69, 527.06 GFlops/s, 0.00 GPts/s]
Performance[mode=advanced] arguments: {'deviceid': -1, 'devicerm': 1}
Allocating host memory for vp(6524, 7032) [350 MB]
Allocating host memory for vp(6524, 7032) [350 MB]
Allocating host memory for src_coords(64, 2) [1 KB]
Allocating host memory for src_coords(64, 2) [1 KB]
Allocating host memory for src(246276, 64) [120 MB]
Allocating host memory for src(246276, 64) [120 MB]
Allocating host memory for rec_coords(64, 2) [1 KB]
Allocating host memory for rec_coords(64, 2) [1 KB]
Operator `Kernel` generated in 1.83 s
  * lowering.Clusters: 0.74 s (40.5 %)
  * lowering.IET: 0.69 s (37.8 %)
     * specializing.IET: 0.53 s (29.0 %)
Flops reduction after symbolic optimization: [92 --> 40]
Operator `Kernel` generated in 1.85 s
  * lowering.Clusters: 0.75 s (40.8 %)
  * lowering.IET: 0.69 s (37.5 %)
     * specializing.IET: 0.54 s (29.4 %)
Flops reduction after symbolic optimization: [92 --> 40]
Pickling of `Data` objects is not supported. Casting to `numpy.ndarray`
Pickling of `Data` objects is not supported. Casting to `numpy.ndarray`
Simulation took 0.88919997215271 seconds
Allocating host memory for u(3, 6524, 7032) [1.0 GB]
Simulation took 0.8897290229797363 seconds
Allocating host memory for u(3, 6524, 7032) [1.0 GB]
Allocating host memory for rec(246276, 64) [120 MB]
Allocating host memory for rec(246276, 64) [120 MB]
p_rec_m=0 and p_rec_M=-1 might cause no iterations along Dimension p_rec
p_rec_m=0 and p_rec_M=-1 might cause no iterations along Dimension p_rec
p_src_m=0 and p_src_M=-1 might cause no iterations along Dimension p_src
p_src_m=0 and p_src_M=-1 might cause no iterations along Dimension p_src
AutoTuner: could not perform any runs
AutoTuner: could not perform any runs
mpicxx -g -fPIC -std=c++11 -gpu=pinned -mp -acc:gpu -fast -shared /tmp/devito-jitcache-uid543800090/1949bb3c5e06b255e7410abf3c3161d6bfb44051.cpp -lm -o /tmp/devito-jitcache-uid543800090/1949bb3c5e06b255e7410abf3c3161d6bfb44051.so
Operator `Kernel` jit-compiled `/tmp/devito-jitcache-uid543800090/1949bb3c5e06b255e7410abf3c3161d6bfb44051.cpp` in 2.31 s with `NvidiaCompiler`
Operator `Kernel` fetched `/tmp/devito-jitcache-uid543800090/1949bb3c5e06b255e7410abf3c3161d6bfb44051.cpp` in 2.28 s from jit-cache
Operator `Kernel` ran in 430.91 s
Operator `Kernel` ran in 430.91 s
Global performance: [OI=1.16, 1931.13 GFlops/s, 52.20 GPts/s]
Global performance: [OI=1.16, 1931.13 GFlops/s, 52.20 GPts/s]
Local performance:
Local performance:
  * section0[rank0]<246274,6508,7016> ran in 424.95 s [OI=1.16, 979.10 GFlops/s, 26.47 GPts/s]
  * section0[rank0]<246274,6508,7016> ran in 424.95 s [OI=1.16, 979.10 GFlops/s, 26.47 GPts/s]
  * section0[rank1]<246274,6508,7016> ran in 430.53 s [OI=1.16, 966.41 GFlops/s, 26.12 GPts/s]
  * section0[rank1]<246274,6508,7016> ran in 430.53 s [OI=1.16, 966.41 GFlops/s, 26.12 GPts/s]
  * section1[rank0]<<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>> ran in 2.95 s [OI=8.44, 2.90 GFlops/s, 0.02 GPts/s]
  * section1[rank0]<<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>> ran in 2.95 s [OI=8.44, 2.90 GFlops/s, 0.02 GPts/s]
  * section2[rank0]<<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>> ran in 2.61 s [OI=10.75, 3.12 GFlops/s, 0.00 GPts/s]
  * section2[rank0]<<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>,<246274,128>> ran in 2.61 s [OI=10.75, 3.12 GFlops/s, 0.00 GPts/s]
Performance[mode=advanced] arguments: {'deviceid': -1, 'devicerm': 1}
Performance[mode=advanced] arguments: {'deviceid': -1, 'devicerm': 1}
